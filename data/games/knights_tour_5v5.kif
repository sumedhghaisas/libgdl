;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; knightstour
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Components
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (role robot)

  (<= (base (moveCount ?m)) (scoreMap ?m ?n))
  (<= (base (cell ?m ?n ?p)) (col ?m) (row ?n) (piece ?p))

  (<= (input robot (move ?x1 ?y1 ?x2 ?y2))
     (col ?x1)
     (row ?y1)
     (knightMove ?x1 ?y1 ?x2 ?y2))

  (row 1)
  (row 2)
  (row 3)
  (row 4)
  (row 5)
  (row 6)
  (row 7)
  (row 8)
  (row 9)
  (row 10)

  (col 1)
  (col 2)
  (col 3)
  (col 4)
  (col 5)
  (col 6)
  (col 7)
  (col 8)
  (col 9)
  (col 10)

  (piece knight)
  (piece hole)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; init
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (init (moveCount 0))
  (init (cell 3 2 knight))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; legal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (legal robot (move ?x1 ?y1 ?x2 ?y2))
      (true (cell ?x1 ?y1 knight))
      (knightMove ?x1 ?y1 ?x2 ?y2))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; next
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (<= (next (moveCount ?newCount))
      (true (moveCount ?oldCount))
      (add 1 count ?oldCount ?newCount))

  (<= (next (cell ?x ?y hole))
      (true (cell ?x ?y hole)))

  (<= (next (cell ?x1 ?y1 hole))
      (does robot (move ?x1 ?y1 ?x2 ?y2)))

  (<= (next (cell ?x2 ?y2 knight))
      (does robot (move ?x1 ?y1 ?x2 ?y2)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; goal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (<= (goal robot ?goal)
      (true (moveCount ?count))
      (scoreMap ?count ?goal))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; terminal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (<= terminal
      (true (cell ?x ?y knight))
      (true (cell ?x ?y hole)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Views
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	
  (<= (knightMove ?x1 ?y1 ?x2 ?y2)
	(add 1 x ?x1 ?x2)
	(add 2 y ?y1 ?y2))

  (<= (knightMove ?x1 ?y1 ?x2 ?y2)
	(add 1 x ?x1 ?x2)
	(add 2 y ?y2 ?y1))

  (<= (knightMove ?x1 ?y1 ?x2 ?y2)
	(add 1 x ?x2 ?x1)
	(add 2 y ?y1 ?y2))

  (<= (knightMove ?x1 ?y1 ?x2 ?y2)
	(add 1 x ?x2 ?x1)
	(add 2 y ?y2 ?y1))

  (<= (knightMove ?x1 ?y1 ?x2 ?y2)
	(add 2 x ?x1 ?x2)
	(add 1 y ?y1 ?y2))

  (<= (knightMove ?x1 ?y1 ?x2 ?y2)
	(add 2 x ?x1 ?x2)
	(add 1 y ?y2 ?y1))

  (<= (knightMove ?x1 ?y1 ?x2 ?y2)
	(add 2 x ?x2 ?x1)
	(add 1 y ?y1 ?y2))

  (<= (knightMove ?x1 ?y1 ?x2 ?y2)
	(add 2 x ?x2 ?x1)
	(add 1 y ?y2 ?y1))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Data
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(add 1 count 0 1)
(add 1 count 1 2)
(add 1 count 2 3)
(add 1 count 3 4)
(add 1 count 4 5)
(add 1 count 5 6)
(add 1 count 6 7)
(add 1 count 7 8)
(add 1 count 8 9)
(add 1 count 9 10)
(add 1 count 10 11)
(add 1 count 11 12)
(add 1 count 12 13)
(add 1 count 13 14)
(add 1 count 14 15)
(add 1 count 15 16)
(add 1 count 16 17)
(add 1 count 17 18)
(add 1 count 18 19)
(add 1 count 19 20)
(add 1 count 20 21)
(add 1 count 21 22)
(add 1 count 22 23)
(add 1 count 23 24)
(add 1 count 24 25)
(add 1 count 25 26)
(add 1 count 26 27)
(add 1 count 27 28)
(add 1 count 28 29)
(add 1 count 29 30)
(add 1 count 30 31)
(add 1 count 31 32)
(add 1 count 32 33)
(add 1 count 33 34)
(add 1 count 34 35)
(add 1 count 35 36)
(add 1 count 36 37)
(add 1 count 37 38)
(add 1 count 38 39)
(add 1 count 39 40)
(add 1 count 40 41)
(add 1 count 41 42)
(add 1 count 42 43)
(add 1 count 43 44)
(add 1 count 44 45)
(add 1 count 45 46)
(add 1 count 46 47)
(add 1 count 47 48)
(add 1 count 48 49)
(add 1 count 49 50)
(add 1 count 50 51)
(add 1 count 51 52)
(add 1 count 52 53)
(add 1 count 53 54)
(add 1 count 54 55)
(add 1 count 55 56)
(add 1 count 56 57)
(add 1 count 57 58)
(add 1 count 58 59)
(add 1 count 59 60)
(add 1 count 60 61)
(add 1 count 61 62)
(add 1 count 62 63)
(add 1 count 63 64)
(add 1 count 64 65)
(add 1 count 65 66)
(add 1 count 66 67)
(add 1 count 67 68)
(add 1 count 68 69)
(add 1 count 69 70)
(add 1 count 70 71)
(add 1 count 71 72)
(add 1 count 72 73)
(add 1 count 73 74)
(add 1 count 74 75)
(add 1 count 75 76)
(add 1 count 76 77)
(add 1 count 77 78)
(add 1 count 78 79)
(add 1 count 79 80)
(add 1 count 80 81)
(add 1 count 81 82)
(add 1 count 82 83)
(add 1 count 83 84)
(add 1 count 84 85)
(add 1 count 85 86)
(add 1 count 86 87)
(add 1 count 87 88)
(add 1 count 88 89)
(add 1 count 89 90)
(add 1 count 90 91)
(add 1 count 91 92)
(add 1 count 92 93)
(add 1 count 93 94)
(add 1 count 94 95)
(add 1 count 95 96)
(add 1 count 96 97)
(add 1 count 97 98)
(add 1 count 98 99)
(add 1 count 99 100)
(add 1 x 1 2)
(add 1 x 2 3)
(add 1 x 3 4)
(add 1 x 4 5)
(add 1 x 5 6)
(add 1 x 6 7)
(add 1 x 7 8)
(add 1 x 8 9)
(add 1 x 9 10)
(add 1 y 1 2)
(add 1 y 2 3)
(add 1 y 3 4)
(add 1 y 4 5)
(add 1 y 5 6)
(add 1 y 6 7)
(add 1 y 7 8)
(add 1 y 8 9)
(add 1 y 9 10)
(add 2 x 1 3)
(add 2 x 2 4)
(add 2 x 3 5)
(add 2 x 4 6)
(add 2 x 5 7)
(add 2 x 6 8)
(add 2 x 7 9)
(add 2 x 8 10)
(add 2 y 1 3)
(add 2 y 2 4)
(add 2 y 3 5)
(add 2 y 4 6)
(add 2 y 5 7)
(add 2 y 6 8)
(add 2 y 7 9)
(add 2 y 8 10)

(scoreMap  0   0)
(scoreMap  1   1)
(scoreMap  2   2)
(scoreMap  3   3)
(scoreMap  4   4)
(scoreMap  5   5)
(scoreMap  6   6)
(scoreMap  7   7)
(scoreMap  8   8)
(scoreMap  9   9)
(scoreMap  10   10)
(scoreMap  11   11)
(scoreMap  12   12)
(scoreMap  13   13)
(scoreMap  14   14)
(scoreMap  15   15)
(scoreMap  16   16)
(scoreMap  17   17)
(scoreMap  18   18)
(scoreMap  19   19)
(scoreMap  20   20)
(scoreMap  21   21)
(scoreMap  22   22)
(scoreMap  23   23)
(scoreMap  24   24)
(scoreMap  25   25)
(scoreMap  26   26)
(scoreMap  27   27)
(scoreMap  28   28)
(scoreMap  29   29)
(scoreMap  30   30)
(scoreMap  31   31)
(scoreMap  32   32)
(scoreMap  33   33)
(scoreMap  34   34)
(scoreMap  35   35)
(scoreMap  36   36)
(scoreMap  37   37)
(scoreMap  38   38)
(scoreMap  39   39)
(scoreMap  40   40)
(scoreMap  41   41)
(scoreMap  42   42)
(scoreMap  43   43)
(scoreMap  44   44)
(scoreMap  45   45)
(scoreMap  46   46)
(scoreMap  47   47)
(scoreMap  48   48)
(scoreMap  49   49)
(scoreMap  50   50)
(scoreMap  51   50)
(scoreMap  52   51)
(scoreMap  53   52)
(scoreMap  54   53)
(scoreMap  55   54)
(scoreMap  56   55)
(scoreMap  57   56)
(scoreMap  58   57)
(scoreMap  59   58)
(scoreMap  60   59)
(scoreMap  61   60)
(scoreMap  62   61)
(scoreMap  63   62)
(scoreMap  64   63)
(scoreMap  65   64)
(scoreMap  66   65)
(scoreMap  67   66)
(scoreMap  68   67)
(scoreMap  69   68)
(scoreMap  70   69)
(scoreMap  71   70)
(scoreMap  72   71)
(scoreMap  73   72)
(scoreMap  74   73)
(scoreMap  75   74)
(scoreMap  76   75)
(scoreMap  77   76)
(scoreMap  78   77)
(scoreMap  79   78)
(scoreMap  80   79)
(scoreMap  81   80)
(scoreMap  82   81)
(scoreMap  83   82)
(scoreMap  84   83)
(scoreMap  85   84)
(scoreMap  86   85)
(scoreMap  87   86)
(scoreMap  88   87)
(scoreMap  89   88)
(scoreMap  90   89)
(scoreMap  91   90)
(scoreMap  92   91)
(scoreMap  93   92)
(scoreMap  94   93)
(scoreMap  95   94)
(scoreMap  96   95)
(scoreMap  97   96)
(scoreMap  98   97)
(scoreMap  99   98)
(scoreMap  100   100)

