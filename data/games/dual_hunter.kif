;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Hunter
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Components
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (role left)
  (role right)

  (<= (base (captures ?board ?m)) (role ?board) (scoremap ?m ?n))
  (<= (base (cell ?board ?m ?n ?p)) (role ?board) (row ?m) (col ?n) (piece ?p))
  (<= (base (step ?n)) (succ ?m ?n))

  (<= (input ?role (move ?m1 ?n1 ?m2 ?n2))
      (role ?role)
      (row ?m1)
      (col ?n1)
      (knightmove ?m1 ?n1 ?m2 ?n2))

  (row 1)
  (row 2)
  (row 3)
  (row 4)
  (row 5)

  (col 1)
  (col 2)
  (col 3)

  (piece knight)
  (piece pawn)
  (piece blank)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; init
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (init (cell left 1 1 knight))
  (init (cell left 1 2 pawn))
  (init (cell left 1 3 pawn))
  (init (cell left 2 1 pawn))
  (init (cell left 2 2 pawn))
  (init (cell left 2 3 pawn))
  (init (cell left 3 1 pawn))
  (init (cell left 3 2 pawn))
  (init (cell left 3 3 pawn))
  (init (cell left 4 1 pawn))
  (init (cell left 4 2 pawn))
  (init (cell left 4 3 pawn))
  (init (cell left 5 1 pawn))
  (init (cell left 5 2 pawn))
  (init (cell left 5 3 pawn))
  (init (captures left 0))

  (init (cell right 1 1 knight))
  (init (cell right 1 2 pawn))
  (init (cell right 1 3 pawn))
  (init (cell right 2 1 pawn))
  (init (cell right 2 2 pawn))
  (init (cell right 2 3 pawn))
  (init (cell right 3 1 pawn))
  (init (cell right 3 2 pawn))
  (init (cell right 3 3 pawn))
  (init (cell right 4 1 pawn))
  (init (cell right 4 2 pawn))
  (init (cell right 4 3 pawn))
  (init (cell right 5 1 pawn))
  (init (cell right 5 2 pawn))
  (init (cell right 5 3 pawn))
  (init (captures right 0))

  (init (step 1))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; legal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	
  (<= (legal ?role (move ?m1 ?n1 ?m2 ?n2))
      (role ?role)
      (true (cell ?role ?m1 ?n1 knight))
      (knightmove ?m1 ?n1 ?m2 ?n2))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; next
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (<= (next (cell ?role ?m2 ?n2 knight))
      (does ?role (move ?m1 ?n1 ?m2 ?n2)))

  (<= (next (cell ?role ?m1 ?n1 blank))
      (does ?role (move ?m1 ?n1 ?m2 ?n2)))

  (<= (next (cell ?role ?u ?v pawn))
      (true (cell ?role ?u ?v pawn))
      (does ?role (move ?m1 ?n1 ?m2 ?n2))
      (distinct ?u ?m2))

  (<= (next (cell ?role ?u ?v pawn))
      (true (cell ?role ?u ?v pawn))
      (does ?role (move ?m1 ?n1 ?m2 ?n2))
      (distinct ?v ?n2))

  (<= (next (cell ?role ?u ?v blank))
      (true (cell ?role ?u ?v blank))
      (does ?role (move ?m1 ?n1 ?m2 ?n2))
      (distinct ?u ?m2))

  (<= (next (cell ?role ?u ?v blank))
      (true (cell ?role ?u ?v blank))
      (does ?role (move ?m1 ?n1 ?m2 ?n2))
      (distinct ?v ?n2))

  (<= (next (captures ?role ?old))
      (does ?role (move ?m1 ?n1 ?m2 ?n2))
      (true (cell ?role ?m2 ?n2 blank))
      (true (captures ?role ?old)))

  (<= (next (captures ?role ?new))
      (does ?role (move ?m1 ?n1 ?m2 ?n2))
      (true (cell ?role ?m2 ?n2 pawn))
      (true (captures ?role ?old))
      (succ ?old ?new))

  (<= (next (step ?new))
      (true (step ?old))
      (succ ?old ?new))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; goal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (<= (goal ?role ?goal)
      (true (captures ?role ?count))
      (scoremap ?count ?goal))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; terminal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (<= terminal (true (step 15)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Views
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	
  (<= (knightmove ?m1 ?n1 ?m2 ?n2)
      (add1row ?m1 ?m2)
      (add2col ?n1 ?n2))

  (<= (knightmove ?m1 ?n1 ?m2 ?n2)
      (add1row ?m1 ?m2)
      (add2col ?n2 ?n1))

  (<= (knightmove ?m1 ?n1 ?m2 ?n2)
      (add1row ?m2 ?m1)
      (add2col ?n1 ?n2))

  (<= (knightmove ?m1 ?n1 ?m2 ?n2)
      (add1row ?m2 ?m1)
      (add2col ?n2 ?n1))

  (<= (knightmove ?m1 ?n1 ?m2 ?n2)
      (add2row ?m1 ?m2)
      (add1col ?n1 ?n2))

  (<= (knightmove ?m1 ?n1 ?m2 ?n2)
      (add2row ?m1 ?m2)
      (add1col ?n2 ?n1))

  (<= (knightmove ?m1 ?n1 ?m2 ?n2)
      (add2row ?m2 ?m1)
      (add1col ?n1 ?n2))

  (<= (knightmove ?m1 ?n1 ?m2 ?n2)
      (add2row ?m2 ?m1)
      (add1col ?n2 ?n1))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Data
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  (succ  0  1)
  (succ  1  2)
  (succ  2  3)
  (succ  3  4)
  (succ  4  5)
  (succ  5  6)
  (succ  6  7)
  (succ  7  8)
  (succ  8  9)
  (succ  9 10)
  (succ 10 11)
  (succ 11 12)
  (succ 12 13)
  (succ 13 14)
  (succ 14 15)

  (add1row 1 2)
  (add1row 2 3)
  (add1row 3 4)
  (add1row 4 5)

  (add2row 1 3)
  (add2row 2 4)
  (add2row 3 5)

  (add1col 1 2)
  (add1col 2 3)

  (add2col 1 3)

  (scoremap  0   0)
  (scoremap  1   7)
  (scoremap  2  14)
  (scoremap  3  21)
  (scoremap  4  28)
  (scoremap  5  35)
  (scoremap  6  42)
  (scoremap  7  50)
  (scoremap  8  57)
  (scoremap  9  64)
  (scoremap 10  71)
  (scoremap 11  78)
  (scoremap 12  85)
  (scoremap 13  92)
  (scoremap 14 100)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

